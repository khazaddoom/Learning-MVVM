// This file was generated by Mendix Modeler 7.14.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package mvvm.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the MVVM module
	public static void afterCreate_Model(IContext context, mvvm.proxies.Model _model)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Model", _model == null ? null : _model.getMendixObject());
			Core.execute(context, "MVVM.AfterCreate_Model", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean beforeCommit_BaseView(IContext context, mvvm.proxies.View _baseView)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("BaseView", _baseView == null ? null : _baseView.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "MVVM.BeforeCommit_BaseView", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean beforeCommit_Model(IContext context, mvvm.proxies.Model _model)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Model", _model == null ? null : _model.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "MVVM.BeforeCommit_Model", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static boolean beforeRollback_Model(IContext context, mvvm.proxies.Model _model)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Model", _model == null ? null : _model.getMendixObject());
			return (java.lang.Boolean)Core.execute(context, "MVVM.BeforeRollback_Model", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.List<mvvm.proxies.View> refreshModel(IContext context, mvvm.proxies.Model _baseModel, mvvm.proxies.View _baseView)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("BaseModel", _baseModel == null ? null : _baseModel.getMendixObject());
			params.put("BaseView", _baseView == null ? null : _baseView.getMendixObject());
			java.util.List<IMendixObject> objs = Core.execute(context, "MVVM.RefreshModel", params);
			java.util.List<mvvm.proxies.View> result = null;
			if (objs != null)
			{
				result = new java.util.ArrayList<mvvm.proxies.View>();
				for (IMendixObject obj : objs)
					result.add(mvvm.proxies.View.initialize(context, obj));
			}
			return result;
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.util.Date refreshView(IContext context, mvvm.proxies.View _view)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("View", _view == null ? null : _view.getMendixObject());
			return (java.util.Date)Core.execute(context, "MVVM.RefreshView", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void refreshViews(IContext context, mvvm.proxies.Model _model)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Model", _model == null ? null : _model.getMendixObject());
			Core.execute(context, "MVVM.RefreshViews", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void reinitializeViews(IContext context, mvvm.proxies.Model _model)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Model", _model == null ? null : _model.getMendixObject());
			Core.execute(context, "MVVM.ReinitializeViews", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}