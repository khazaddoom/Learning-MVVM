// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package mvvm.actions;

import com.mendix.core.Core;
import com.mendix.core.objectmanagement.member.MendixAutoNumber;
import com.mendix.core.objectmanagement.member.MendixObjectReference;
import com.mendix.core.objectmanagement.member.MendixObjectReferenceSet;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObjectMember;
import com.mendix.systemwideinterfaces.core.IMendixObjectMember.MemberValueState;
import com.mendix.webui.CustomJavaAction;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import java.util.ArrayList;
import java.util.Map;

public class CloneSource extends CustomJavaAction<java.lang.Boolean>
{
	private IMendixObject Source;
	private IMendixObject Target;

	public CloneSource(IContext context, IMendixObject Source, IMendixObject Target)
	{
		super(context);
		this.Source = Source;
		this.Target = Target;
	}

	@Override
	public java.lang.Boolean executeAction() throws Exception
	{
		// BEGIN USER CODE
		return !clone(getContext(), Source, Target).isEmpty();
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public java.lang.String toString()
	{
		return "CloneSource";
	}

	// BEGIN EXTRA CODE
	public static ArrayList<String> clone(IContext context, IMendixObject Source, IMendixObject Target) {
		Map<String, ? extends IMendixObjectMember<?>> members = Source.getMembers(context);
		Map<String, ? extends IMendixObjectMember<?>> tMembers = Target.getMembers(context);

		ArrayList<String> updatedFields = new ArrayList<String>();
		
		for(String key : members.keySet()) {
			//Core.getLogger("XXX").info("->"+key);
			if (!tMembers.containsKey(key))
				continue;
			IMendixObjectMember<?> m = members.get(key);
			IMendixObjectMember<?> t = tMembers.get(key);

			// Skip virtual and autonumber target members
			if ((t != null) && t.isVirtual() 
					|| (t instanceof MendixAutoNumber)) {
				continue;
			}
			
			if ((!(m instanceof MendixObjectReference) && !(m instanceof MendixObjectReferenceSet))) {
				Target.setValue(context, key, m.getValue(context));
				updatedFields.add(key);
			}
		}
		return updatedFields;
	}
	// END EXTRA CODE
}
